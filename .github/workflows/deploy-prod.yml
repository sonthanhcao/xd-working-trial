name: Deploy Prod

on:
  push:
    tags:        
      - 'v*' 

  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: prod
        required: true

env:
  DOCKER_IMAGE_REPO: sonct
  DOCKER_IMAGE_NAME: xd-working-trial
  ARM_SUBSCRIPTION_ID: c50abfab-96bd-4073-99dc-d4c19c34624a
  ARM_TENANT_ID: 7b89afeb-e11b-481b-bb80-c454a7376a39
  ARM_CLIENT_ID: c3a4ee61-521c-4a03-b4e2-551780f6d050
  AKS_RG: sc-devops-rg-aks
  AKS_CLUSTER_NAME: sc-devops-aks-primary

jobs:
  tag:
    name: Tag
    environment: prod
    runs-on: [self-hosted, shared-k8s-runner]
    steps:
      - name: Log in to docker hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set the value
        id: set_values
        run: |
          echo "GITHUB_SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo $RELEASE_VERSION
          echo '::set-output name=RELEASE_VERSION::$RELEASE_VERSION'
      - name: Tag 
        run: |
          echo $RELEASE_VERSION
          docker pull $DOCKER_IMAGE_REPO/$DOCKER_IMAGE_NAME:$GITHUB_SHORT_SHA && docker tag $DOCKER_IMAGE_REPO/$DOCKER_IMAGE_NAME:$GITHUB_SHORT_SHA $DOCKER_IMAGE_REPO/$DOCKER_IMAGE_NAME:$RELEASE_VERSION
          docker push $DOCKER_IMAGE_REPO/$DOCKER_IMAGE_NAME:$RELEASE_VERSION
  deploy:
    name: Deploy
    needs: [ tag ] 
    env:
      NAMESPACE: prod
      SERVICE_NAME: ${{ github.event.repository.name }}
      HOST: xd-working-trial.devopsgalaxy.com
    container: sonct/k8s-deployer:latest
    runs-on: [self-hosted, shared-k8s-runner]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set the value
        id: set_values
        run: |
          echo "GITHUB_SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          echo '::set-output name=RELEASE_VERSION::$RELEASE_VERSION'
      - name: Deploy 
        run: |
          export IMAGE_TAG=$RELEASE_VERSION
          az login --service-principal -u $ARM_CLIENT_ID -p ${{secrets.ARM_CLIENT_SECRET}} --tenant $ARM_TENANT_ID
          az account set --subscription $ARM_SUBSCRIPTION_ID
          az aks get-credentials --resource-group $AKS_RG --name $AKS_CLUSTER_NAME
          kubectl get pod -A
          cd k8s && bash deploy.sh